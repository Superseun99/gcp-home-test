name: Watch for GitHub Runner Image Releases

on:
  schedule:
    - cron: "0 12 * * *"  # Runs daily at 12:00 UTC. Adjust as needed.
  workflow_dispatch:       # Allows manual runs.

jobs:
  check-new-release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Make release file executable
        run: chmod +x .github/last_known_release.txt
        
      - name: Check for New Runner Release
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
         # Fetch the latest release for the GitHub Actions runner
          latest_release=$(curl -s https://api.github.com/repos/actions/runner/releases/latest | jq -r '.tag_name')
          
          # Compare with the last known release stored in the repository
          last_known_release_file=".github/last_known_release.txt"
          last_known_release=""
          if [ -f "$last_known_release_file" ]; then
            last_known_release=$(cat $last_known_release_file)
          fi

          echo "Latest release: $latest_release"
          echo "Last known release: $last_known_release"

          if [ "$latest_release" != "$last_known_release" ]; then
            echo "New release found: $latest_release"
            echo "$latest_release" > $last_known_release_file
            #echo "::set-output name=new_release::true"
            echo "{new_release}={true}" >> $GITHUB_STATE
          else
            #echo "::set-output name=new_release::false"
            echo "{new_release}={false}" >> $GITHUB_OUTPUT
          fi

      - name: Send Slack Notification
        # id: slack
        # uses: slackapi/slack-github-action@v1.27.0
        if: steps.check_releases.$GITHUB_OUTPUT.new_releases
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          payload="{
            \"text\": \"*New GitHub Runner Image Releases Detected:*\n${{ steps.check_releases.$GITHUB_OUTPUT.new_releases }}\"
          }"

          curl -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK_URL"

      # - name: Notify via GitHub Issue
      #   if: steps.check_release.outputs.new_release == 'true'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh issue create --title "New GitHub Runner Release Detected: $latest_release" \
      #       --body "A new GitHub Actions runner image release is available: **$latest_release**."
